"""
Django settings for service project.

Generated by 'django-admin startproject' using Django 2.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&)f-%)6g8i@7jelg#1@+#=x5&5lx8_!bm89nw#!^#l^qs$5wdz'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
CAS_UW = False

ALLOWED_HOSTS = ['127.0.0.1', '127.0.1.1', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'service.apps.ServiceConfig',
    'daemon.apps.DaemonConfig',
    'django_celery_beat',
    'django_extensions',
    'django_cas_ng',
    'django_jinja',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if CAS_UW:
    AUTHENTICATION_BACKENDS = [
        'django.contrib.auth.backends.ModelBackend',
        'django_cas_ng.backends.CASBackend',
    ]
    CAS_SERVER_URL = 'https://test.logowanie.uw.edu.pl/cas/'

ROOT_URLCONF = 'phantom_watch.urls'

TEMPLATES = [
    {
        # 'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'BACKEND': 'django_jinja.backend.Jinja2',
        'DIRS': [
            os.path.join(BASE_DIR, 'daemon/jinja2'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            # 'environment': 'phantom_watch.jinja2.environment',
            "match_extension": ".jinja",
            "match_regex": r"(?!env/).*",
            "app_dirname": "templates",
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'phantom_watch.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql', 
        'NAME': 'service',
        'USER': 'django',
        'PASSWORD': 'django',
        'HOST': '0.0.0.0',   # Or an IP Address that your DB is hosted on
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Warsaw'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Celery
CELERY_BROKER_URL = 'amqp://guest:guest@localhost//'

#: Only add pickle to this list if your broker is secured
#: from unwanted access (see userguide/security.html)
CELERY_ACCEPT_CONTENT = ['json']
CELERY_RESULT_BACKEND = 'db+sqlite:///results.sqlite'
CELERY_TASK_SERIALIZER = 'json'

# Screenshotting
PHANTOMJS_BIN = os.path.join(BASE_DIR, 'daemon/webscreenshot/phantomjs-2.1.1-linux-x86_64/bin/phantomjs')
WEBSCREENSHOT_JS = os.path.join(BASE_DIR, 'daemon/webscreenshot/webscreenshot.js')
SCREENSHOTS_DIRECTORY = '/tmp/'

NODEJS = "node"
SCREENSHOT_JS = os.path.join(BASE_DIR, 'daemon/puppet_screenshot/screenshot.js')
SCREENSHOTS_DIR = '/tmp/screenshots'
SCREENSHOT_TIMEOUT = 30

# DRF
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}